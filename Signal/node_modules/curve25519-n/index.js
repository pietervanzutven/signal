require((exports, module) => {
    'use strict';
    
    const toArrayBuffer = require('to-arraybuffer');

    exports.generateKeyPair = () => {
        const result = window.libsignal.Curve.generateKeyPair();
        result.privKey = new Uint8Array(result.privKey);
        result.pubKey = new Uint8Array(result.pubKey);
        return result;
    }

    exports.createKeyPair = incomingKeyBuffer => {
        const result = window.libsignal.Curve.createKeyPair(toArrayBuffer(incomingKeyBuffer));
        result.privKey = new Uint8Array(result.privKey);
        result.pubKey = new Uint8Array(result.pubKey);
        return result;
    }

    exports.calculateAgreement = (pubKeyBuffer, privKeyBuffer) => {
        const buffer = window.libsignal.Curve.calculateAgreement(toArrayBuffer(pubKeyBuffer), toArrayBuffer(privKeyBuffer));
        return new Uint8Array(buffer);
    }

    exports.verifySignature = (pubKeyBuffer, messageBuffer, signatureBuffer) => {
        return window.libsignal.Curve.verifySignature(toArrayBuffer(pubKeyBuffer), toArrayBuffer(messageBuffer), toArrayBuffer(signatureBuffer));
    }

    exports.calculateSignature = (privKeyBuffer, messageBuffer) => {
        const buffer = window.libsignal.Curve.calculateSignature(toArrayBuffer(privKeyBuffer), toArrayBuffer(messageBuffer));
        return new Uint8Array(buffer);
    }

    exports.validatePubKeyFormat = (pubKeyBuffer) => {
        return window.libsignal.Curve.validatePubKeyFormat(toArrayBuffer(pubKeyBuffer));
    }
});