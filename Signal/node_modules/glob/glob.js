(function () {
    'use strict';

    const electron = window.electron;

    window.glob = window.fast_glob = async (pattern, options, callback) => {
        let base = Windows.Storage.ApplicationData.current.localFolder;
        let protocol = electron.app.getPath() + '/';
        if (pattern.includes(__dirname)) {
            base = Windows.ApplicationModel.Package.current.installedLocation;
            protocol = __dirname + '/../';
        }
        pattern = pattern.replace(protocol,'');
        const parts = pattern.split('/');
        const fileTypeFilter = parts.pop();
        const folderDepth = parts.pop();

        let queryOptions;
        if (fileTypeFilter === '*') {
            queryOptions = new Windows.Storage.Search.QueryOptions();
        } else {
            queryOptions = new Windows.Storage.Search.QueryOptions(Windows.Storage.Search.CommonFileQuery.orderByName, [fileTypeFilter.replace('*','')]);
        }
        if (folderDepth === '**') {
            queryOptions.folderDepth = Windows.Storage.Search.FolderDepth.deep;
        }

        const filePaths = [];
        const folder = await base.tryGetItemAsync(parts.join('/'));
        if (folder) {
            const query = folder.createFileQueryWithOptions(queryOptions);
            const files = await query.getFilesAsync();

            files.forEach(file => {
                if (options.nodir) {
                        filePaths.push(file.path.replace(base.path + '\\' + parts.join('\\') + '\\','').replace(/\\/g, '/'));
                    } else {
                        filePaths.push(protocol + file.path.replace(base.path + '\\','').replace(/\\/g, '/'));
                    }
            });
        }

        if (callback) {
            callback(null, filePaths);
        } else {
            return filePaths;
        }
    }
})();