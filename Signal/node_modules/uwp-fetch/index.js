(function () {
    httpClient = Windows.Web.Http.HttpClient();

    window.uwp_fetch = async (url, options) => {

        const httpRequest = Windows.Web.Http.HttpRequestMessage();
        httpRequest.method = Windows.Web.Http.HttpMethod(options.method);
        httpRequest.requestUri = Windows.Foundation.Uri(url);

        if (options.body) {
            httpRequest.content = Windows.Web.Http.HttpStringContent(options.body)
            httpRequest.content.headers['Content-Type'] = options.headers['Content-Type'];
        }

        if (options.headers) {
            const headers = Object.keys(options.headers);
            headers.forEach(header => {
                if (header === 'cookie') {
                    httpRequest.headers.cookie.append(Windows.Web.Http.Headers.HttpCookiePairHeaderValue('Signal',options.headers.cookie));
                } else {
                    httpRequest.headers.append(header, options.headers[header]);
                }
            });
        }

        const httpResponse = await httpClient.sendRequestAsync(httpRequest);

        const response = {
            status: httpResponse.statusCode,
            headers: {
                get: header => {
                    if (header.toLowerCase() === 'content-type') {
                        return httpResponse.content.headers.contentType.mediaType;
                    } else {
                        return httpResponse.headers[header];
                    }
                }
            },
            textConverted: async () => {
                return await httpResponse.content.readAsStringAsync()
            },
            json: async () => {
                return JSON.parse(await httpResponse.content.readAsStringAsync())
            }
        }

        return response;
        
    }
}