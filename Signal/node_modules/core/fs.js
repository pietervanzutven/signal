(function () {
    'use strict';

    const localSettings = Windows.Storage.ApplicationData.current.localSettings;
    const getKeyFromPath = path => path.replace(app.getPath() + '/', '');

    window.fs = {
        readdirSync: path => {
            const key = getKeyFromPath(path);
            if (localSettings.containers.hasKey(key)) {
                const files = [];
                let value = localSettings.containers[key].values.first();
                while (value) {
                    files.push(value.current.key);
                    value = value.moveNext();
                }
                return files;
            } else {
                return [];
            }
        },
        createFileSync: file => {
            const key = getKeyFromPath(file);
            if (key.includes('/')) {
                window[key] = '';
            } else {
                localSettings.values[key] = '';
            }
        },
        readFileSync: (file, encoding) => {
            const key = getKeyFromPath(file);
            if (key.includes('/')) {
                if (window[key]) {
                    return window[key];
                } else {
                    return '';
                }
            } else {
                if(localSettings.values.hasKey(key)) {
                    return localSettings.values[key];
                } else {
                    throw { code: 'ENOENT' };
                }
            }
        },
        readFile: (file, encoding, callback) => {
            const text = fs.readFileSync(file, encoding);
            callback(null, text);
        },
        appendFileSync: (file, text) => {
            const key = getKeyFromPath(file);
            if (window[key] === '') {
                window[key] = text;
            } else {
                window[key] += ('\n' + text);
            }
        },
        writeFileSync: (file, text, encoding) => {
            const key = getKeyFromPath(file);
            localSettings.values[key] = text;
        },
        unlinkSync: file => {
            const key = getKeyFromPath(file);
            if (key.includes('/')) {
                delete window[key];
            } else {
                localSettings.values.remove(key);
            }
        },
        realpath: () => 'ms-appx://'
    }

})();