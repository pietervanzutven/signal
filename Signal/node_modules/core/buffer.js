(function () {
    function Buffer(...args) {
        if (args) {
            this.bytebuffer = window.dcodeIO.ByteBuffer.wrap(...args);
        } else {
            this.bytebuffer = window.dcodeIO.ByteBuffer();
        }
        this.length = this.bytebuffer.limit;
        this.toString = this.bytebuffer.toString.bind(this.bytebuffer);
    }
    Buffer.from = (...args) => new Buffer(...args);
    Buffer.isBuffer = buffer => buffer instanceof Buffer;
    Buffer.concat = (buffers, ...args) => {
        let buffer = buffers[0];
        for (let i=1; i<buffers.length; i++) {
            const bytebuffer = window.dcodeIO.ByteBuffer.concat([buffer.bytebuffer, buffers[i].bytebuffer], ...args);
            buffer = new Buffer(bytebuffer);
        }
        return buffer;
    }

    window.Buffer = Buffer;
})();