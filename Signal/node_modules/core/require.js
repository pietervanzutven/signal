function require(input) {
    'use strict';

    if (typeof input === 'string') {
        let script;
        if (input.includes('.')) {
            const err = new Error();
            const stack = err.stack.split('\n')[2];
            const start = stack.lastIndexOf('ms-appx:');
            const end = stack.lastIndexOf('.js');
            const path = stack.substring(start,end);
            const parts = path.split('/');
            parts.pop();
            const uri = Windows.Foundation.Uri(parts.join('/') + '/' + input);
            script = uri.absoluteUri.replace('/ts/','/typescript/');
        } else {
            script = 'ms-appx://signal/node_modules/' + input;
        }

        if (require.scripts[script.toLowerCase()]) {
            const module = {exports: {}};
            require.scripts[script.toLowerCase()](module.exports, module);
            return module.exports;
        } else if (window[input]) {
            return window[input];
        } else if (window[input.replace(/-/g,'_').replace(/\./g,'_').replace(/@/g,'')]) {
            return window[input.replace(/-/g,'_').replace(/\./g,'_').replace(/@/g,'')];
        } else {
            const parts = script.replace('ms-appx://signal/','').replace('node_modules/','').replace('js/modules/','').split('/');
            let object = window[parts[0].replace('typescript','ts').replace(/-/g,'_').replace(/\./g,'_').replace(/@/,'')];
            for (let i = 1; i < parts.length; i++) {
                object = object[parts[i].replace('typescript','ts').replace(/-/g,'_').replace(/\./g,'_').replace(/@/,'')];
            }
            return object;
        }
    } else {
        const err = new Error();
        const start = err.stack.indexOf('at Global code (')+16;
        const end = err.stack.indexOf(':1:1)');
        const script = err.stack.substring(start,end).replace('.js','').replace('\/index','').toLowerCase();
        require.scripts[script] = input;
    }
}
require.scripts = {};